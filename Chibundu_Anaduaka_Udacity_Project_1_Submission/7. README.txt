# Name: Chibundu Anaduaka
# Programme: Udacity Cloud DevOps Engineer NanoDegree Course
# Submission: Project 1 - Deploy Static Website on AWS
# Date: 13th April 2021

# 1. An S3 bucket was created in AWS via the console. The bucket was named "trinitywebsitebucket". Screen shot image to show the S3 bucket created was attached as part of the submission.

# 2. Static content files to create the website provided from the Student-ready starter code were uploaded to the S3 bucket. Screen shot image to show the files uploaded to the S3 bucket was attached as part of the submission.

# 3. The S3 bucket was configured to be made public and secured with an IAM policy that would allow anyone to be able to use the S3 GetObject action on any item in the S3 bucket. This is because S3 buckets need to be made public to allow for static website hosting in AWS. This would allow the static website to be able to be viewed on a web browser directly using the S3 bucket website endpoint URL. The IAM policy used on the S3 bucket was created using the AWS Policy generator feature. Screen shot image of the S3 bucket IAM policy was attached as part of the submission (3A).

# 4. The S3 bucket was configured to host a static website by enabling the feature in AWS and providing the index.html file uploaded as the both the index document and error document. Screen shot image of the S3 bucket configuration to host a static website was attached as part of the submission.

# 5. The static website was configured to be delivered globally with low latency. This was done by creating a CloudFront Distribution in AWS via the management console, and configuring the distribution to access and cache the content from the S3 bucket created as the origin ID. Screen shot image of the CloudFront Distribution created to deliver the static website content was attached as part of the submission.

# 6. The S3 bucket policy was then modified to allow access to the S3 bucket website only via the CloudFront endpoint URL. This was done by changing the principal on the bucket policy from "*" to the CloudFront ARN. This means that the end user would no longer be able to access the static website via the web browser using the S3 bucket website endpoint URL. This provides a more secure access to our static website hosting as the S3 bucket website endpoint is not secure (http), whereas the CloudFront distribution endpoint is secured with SSL (https) as well as AWS WAF. Screen shot image of the modified S3 bucket IAM policy was attached as part of the submission (3B).

# 7. The static website created is now accessible via the web browser using the CloudFront domain URL created. Screen shot image of the static website created being accessed via the web browser was attached as part of the submission.

# **CloudFront Domain URL for website: https://d60wg32qyc57u.cloudfront.net
# **S3 bucket static website endpoint URL: http://trinitywebsitebucket.s3-website.eu-west-2.amazonaws.com
# **The static website created was slightly modified from the original content provided from the Student-ready starter code by changing the home page background image and modifying some of the web page text.